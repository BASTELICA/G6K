<header class="jumbotron subhead" id="overview">
	<div class="container">
		<h1>
			G6K: Administration guide
		</h1>
		<p class="lead">Composition of expressions</p>
	</div>
</header>
<div class="container-fluid">
	<div class="row">
		<div class="col-3">
			<nav id="document-toc" class="navbar navbar-light bg-light flex-column" data-spy="affix" data-offset-top="200" data-offset-bottom="200">
				<nav class="nav nav-pills flex-column">
					<a class="nav-link ml-1" href="#expressions">1. Expressions</a>

					<nav class="nav nav-pills flex-column">
						<a class="nav-link ml-2" href="#composition-of-an-expression">1.1. Composition of an expression</a>

						<nav class="nav nav-pills flex-column">
							<a class="nav-link ml-3" href="#operands">1.1.1. Operands</a>

							<nav class="nav nav-pills flex-column">
<a class="nav-link ml-4" href="#miscellaneous">1.1.1.1. Miscellaneous</a>
<a class="nav-link ml-4" href="#fields">1.1.1.2. Fields</a>
<a class="nav-link ml-4" href="#constants">1.1.1.3. Constants</a>
<a class="nav-link ml-4" href="#functions">1.1.1.4. Functions</a>
</nav>
							<a class="nav-link ml-3" href="#operators">1.1.2. Operators</a>

						</nav>
						<a class="nav-link ml-2" href="#example-of-expression">1.2. Example of expression</a>

					</nav>
				</nav>
			</nav>
		</div>
		<div class="col-9">
			<div class="document-content">
				<h1 id="expressions">
					1. Expressions
				</h1>
				<p>Expressions are mathematical formulas evaluated by G6K to perform a simulation.</p>
				<p>An expression is a combination of operands and operators.</p>
				<pre class="prettyprint">
&lt;expression&gt;: &lt;operand&gt;[&lt;operator&gt;&lt;operand&gt;]
&lt;operand&gt;: &lt;expression>|&lt;operand&gt;
</pre>
				<p>G6K has a component for entering expressions.</p>
				<p>This component is used:</p>
				<ul>
					<li>for the constitution of the filters of the access requests to the reference data sources</li>
					<li>to calculate the default value, the minimum value, the maximum value or the content of a data</li>
					<li>for the constitution of the conditions of business rules</li>
				</ul>
				<h2 id="composition-of-an-expression">
					1.1. Composition of an expression
				</h2>
				<p>
					To compose an expression, click on the list box 
					<img src="{{ asset('assets/admin/images/documentation/expression-builder-operand-select.png') }}" alt="" />
				</p>
				<p>So, you can select the elements that make up an operand:</p>
				<ul>
					<li>literal value</li>
					<li>constant</li>
					<li>data (field)</li>
					<li>function</li>
					<li>nested expression</li>
				</ul>
				<p>
					<img src="{{ asset('assets/admin/images/documentation/en/expression-builder-operands1.png') }}" alt="" />
					<img src="{{ asset('assets/admin/images/documentation/en/expression-builder-operands2.png') }}" alt="" />
				</p>
				<p>These elements are described below:</p>
				<h3 id="operands">
					1.1.1. Operands
				</h3>
				<h4 id="miscellaneous">
					1.1.1.1. Miscellaneous
				</h4>
				<table class="table-responsive table-sm table-striped table-bordered">
					<thead>
						<tr>
							<th>Name</th>
							<th>Description</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>Literal</td>
							<td>
								Lets you enters a literal value. After selecting this item, the input field appears: 
								<img src="{{ asset('assets/admin/images/documentation/en/expression-builder-operand-constant-input.png') }}" alt="" />
								. Enter the value and press the "Enter" key. The word « Literal » is replaced by the value entered.
							</td>
						</tr>
						<tr>
							<td>Nested expression</td>
							<td>
								Lets you put part of the expression in brackets. After selecting this element, the list box is enclosed in parentheses: 
								<img src="{{ asset('assets/admin/images/documentation/expression-builder-operand-subexpression-input.png') }}" alt="" />
							</td>
						</tr>
					</tbody>
				</table>
				<h4 id="fields">
					1.1.1.2. Fields
				</h4>
				<p>The list of fields is made up of the labels of the data you have defined ("Datas" panel).</p>
				<p>To insert a field into the expression, select it from the list.</p>
				<h4 id="constants">
					1.1.1.3. Constants
				</h4>
				<table class="table-responsive table-sm table-striped table-bordered">
					<thead>
						<tr>
							<th>Name</th>
							<th>Description</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>pi</td>
							<td>3,14159</td>
						</tr>
						<tr>
							<td>now</td>
							<td>Date of simulation day</td>
						</tr>
						<tr>
							<td>today</td>
							<td>Alias ​​from now</td>
						</tr>
						<tr>
							<td>true</td>
							<td>Boolean 'true'</td>
						</tr>
						<tr>
							<td>false</td>
							<td>Boolean 'false'</td>
						</tr>
					</tbody>
				</table>
				<h4 id="functions">
					1.1.1.4. Functions
				</h4>
				<table class="table-responsive table-sm table-striped table-bordered">
					<thead>
						<tr>
							<th>Function</th>
							<th>Description</th>
							<th align="center">Number of arguments</th>
							<th>Type returned</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>abs</td>
							<td>returns the absolute value of the numeric argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>acos</td>
							<td>returns the arc cosine of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>acosh</td>
							<td>returns the hyperbolic cosine arc of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>addMonths</td>
							<td>adds the number of months in argument 1 to the date in argument 2 and returns the result date</td>
							<td align="center">2</td>
							<td>date</td>
						</tr>
						<tr>
							<td>asin</td>
							<td>returns the sine arc of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>asinh</td>
							<td>returns the hyperbolic sine arc of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>atan</td>
							<td>returns the arc tangent of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>atan2</td>
							<td>returns the arc tangent 2 of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>atanh</td>
							<td>returns the hyperbolic tangent arc of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>ceil</td>
							<td>returns the smallest integer value greater than or equal to the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>concat</td>
							<td>returns the result of concatenating strings passed as arguments</td>
							<td align="center">2</td>
							<td>text</td>
						</tr>
						<tr>
							<td>cos</td>
							<td>returns the cosine of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>cosh</td>
							<td>returns the cosine of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>count</td>
							<td>returns the number of non-zero arguments</td>
							<td align="center">unlimited</td>
							<td>number</td>
						</tr>
						<tr>
							<td>day</td>
							<td>returns the day (1 to 31) extracted from the date provided in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>exp</td>
							<td>returns the exponential of the value passed in argument, ie the value of e scope to the power of the argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>firstDayOfMonth</td>
							<td>returns the date corresponding to the first day of the month, calculated from the date given in argument</td>
							<td align="center">1</td>
							<td>date</td>
						</tr>
						<tr>
							<td>floor</td>
							<td>returns the largest integer value less than or equal to the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>fullmonth</td>
							<td>returns the plaintext of the month extracted from the date given as argument</td>
							<td align="center">1</td>
							<td></td>
						</tr>
						<tr>
							<td>get</td>
							<td>returns the element of the list in argument 1 in position given in argument 2</td>
							<td align="center">2</td>
							<td>text</td>
						</tr>
						<tr>
							<td>lastday</td>
							<td>returns the last day of the month (1 to 31) calculated from the month (1 to 12) in argument 1 and the year in argument 2</td>
							<td align="center">2</td>
							<td>number</td>
						</tr>
						<tr>
							<td>lastDayOfMonth</td>
							<td>returns the date corresponding to the last day of the month, calculated from the date provided in argument</td>
							<td align="center">1</td>
							<td>date</td>
						</tr>
						<tr>
							<td>lcfirst</td>
							<td>converts the first letter of the string to lowercase</td>
							<td align="center">1</td>
							<td>text</td>
						</tr>
						<tr>
							<td>length</td>
							<td>returns the length of the string passed as argument</td>
							<td align="center">1</td>
							<td>integer</td>
						</tr>
						<tr>
							<td>log</td>
							<td>returns the logarithm of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>log10</td>
							<td>returns the base 10 logarithm of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>lower</td>
							<td>converts the string to lowercase letters</td>
							<td align="center">1</td>
							<td>text</td>
						</tr>
						<tr>
							<td>match</td>
							<td>returns true if the text in argument 2 corresponds to the regular expression in argument 1, false otherwise</td>
							<td align="center">2</td>
							<td>boolean</td>
						</tr>
						<tr>
							<td>max</td>
							<td>returns the largest of the values ​​provided in arguments</td>
							<td align="center">unlimited</td>
							<td>number</td>
						</tr>
						<tr>
							<td>min</td>
							<td>returns the smallest of the values ​​provided in arguments</td>
							<td align="center">unlimited</td>
							<td>number</td>
						</tr>
						<tr>
							<td>money</td>
							<td>converts the amount provided in argument to a string</td>
							<td align="center">1</td>
							<td>text</td>
						</tr>
						<tr>
							<td>month</td>
							<td>returns the month (1 to 12) extracted from the given date in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>nextWorkDay</td>
							<td>return on working day (taking account of bank holidays) according to the date provided in argument</td>
							<td align="center">1</td>
							<td>date</td>
						</tr>
						<tr>
							<td>pow</td>
							<td>returns the value of the argument 1 high to the power of the value of the argument 2</td>
							<td align="center">2</td>
							<td>number</td>
						</tr>
						<tr>
							<td>rand</td>
							<td>returns a random value between 0 and 1 inclusive with the argument as the starting value</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>replace</td>
							<td>replaces all occurrences of argument 1 in argument 3 with the value of argument 2</td>
							<td align="center">3</td>
							<td>text</td>
						</tr>
						<tr>
							<td>round</td>
							<td>rounding the value of argument 1 to the nearest value with the number of decimals passed in argument 2</td>
							<td align="center">2</td>
							<td>number</td>
						</tr>
						<tr>
							<td>sin</td>
							<td>returns the sine of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>sinh</td>
							<td>returns the hyperbolic sine of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>size</td>
							<td>returns the number of elements in the supplied list e argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>split</td>
							<td>transforms the string provided in argument 2 into a list according to the regular expression in argument 1</td>
							<td align="center">2</td>
							<td>list</td>
						</tr>
						<tr>
							<td>sqrt</td>
							<td>returns the square root of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>sum</td>
							<td>returns the sum of arguments</td>
							<td align="center">unlimited</td>
							<td>number</td>
						</tr>
						<tr>
							<td>tan</td>
							<td>returns the tangent of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>tanh</td>
							<td>returns the hyperbolic tangent of the value passed in argument</td>
							<td align="center">1</td>
							<td>number</td>
						</tr>
						<tr>
							<td>trim</td>
							<td>removes white characters at the beginning and end of the string</td>
							<td align="center">1</td>
							<td>text</td>
						</tr>
						<tr>
							<td>ucfirst</td>
							<td>converts the first letter of the string to uppercase</td>
							<td align="center">1</td>
							<td>text</td>
						</tr>
						<tr>
							<td>upper</td>
							<td>converts the string to uppercase</td>
							<td align="center">1</td>
							<td>text</td>
						</tr>
						<tr>
							<td>workdays</td>
							<td>returns the number of working days (taking into account the holidays) between the two dates provided in arguments.</td>
							<td align="center">2</td>
							<td>number</td>
						</tr>
						<tr>
							<td>workdaysofmonth</td>
							<td>returns the number of working days (taking into account the holidays) of the month calculated from the month (1 to 12) in argument 2 and the year in argument 1</td>
							<td align="center">2</td>
							<td>number</td>
						</tr>
						<tr>
							<td>year</td>
							<td>returns the extracted year</td>
							<td align="center"></td>
							<td></td>
						</tr>
					</tbody>
				</table>
				<p>After selection of the function, a list box by argument is displayed, allowing you to enter the arguments of the function. These arguments are also expressions.</p>
				<p>When you have finished entering the operand, it is displayed underlined.
Thus, element names and opening parentheses are underlined.</p>
				<p>This operand may be sufficient to constitute an expression, but you can combine it with other operands to compose a more "complex" expression.
To do this, right-click an underlined item and the following menu appears:</p>
				<p>
					<img src="{{ asset('assets/admin/images/documentation/en/expression-builder-contextmenu.png') }}" alt="" />
				</p>
				<table class="table-responsive table-sm table-striped table-bordered">
					<thead>
						<tr>
							<th>Menu Item</th>
							<th>Description</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>Change this operand</td>
							<td>
								Replaces the underlined element with a list box: 
								<img src="{{ asset('assets/admin/images/documentation/en/expression-builder-menu-change.png') }}" alt="" />
								allowing you to replace the operand
							</td>
						</tr>
						<tr>
							<td>Add operand after</td>
							<td>
								Adds a list box of operators 
								<img src="{{ asset('assets/admin/images/documentation/en/expression-builder-menu-insert-after.png') }}" alt="" />
								after the underlined element so you can select the operator that will combine the two operands. Once the operator is selected, a list box is displayed for the second operand.
								<br>
								Operators are defined in the following paragraph.
							</td>
						</tr>
						<tr>
							<td>Add operand before</td>
							<td>
								Adds a list box of operands for the second operand and a list box of operators to combine the two operands 
								<img src="{{ asset('assets/admin/images/documentation/en/expression-builder-menu-insert-before.png') }}" alt="" />
								before the underlined element.
								<br>
								Operators are defined in the following paragraph.
							</td>
						</tr>
						<tr>
							<td>Change to nested expression</td>
							<td>
								Replaces the underlined element with a list box enclosed in parenthesis: 
								<img src="{{ asset('assets/admin/images/documentation/expression-builder-operand-subexpression-input.png') }}" alt="" />
							</td>
						</tr>
						<tr>
							<td>Delete this operand</td>
							<td>Deletes the underlined operand.</td>
						</tr>
					</tbody>
				</table>
				<h3 id="operators">
					1.1.2. Operators
				</h3>
				<p>
					<img src="{{ asset('assets/admin/images/documentation/expression-builder-operators.png') }}" alt="" />
				</p>
				<table class="table-responsive table-sm table-striped table-bordered">
					<thead>
						<tr>
							<th align="center">Symbol</th>
							<th>Description</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td align="center">+</td>
							<td>Addition</td>
						</tr>
						<tr>
							<td align="center">-</td>
							<td>Subtraction</td>
						</tr>
						<tr>
							<td align="center">*</td>
							<td>Multiplication</td>
						</tr>
						<tr>
							<td align="center">/</td>
							<td>Division</td>
						</tr>
						<tr>
							<td align="center">%</td>
							<td>Rest of the entire division</td>
						</tr>
						<tr>
							<td align="center">&amp;</td>
							<td>Bit-to-bit operator 'AND'</td>
						</tr>
						<tr>
							<td align="center">&#124;</td>
							<td>Bit-to-bit operator 'OR'</td>
						</tr>
					</tbody>
				</table>
				<h2 id="example-of-expression">
					1.2. Example of expression
				</h2>
				<p>In the demo simulator provided with G6K for the calculation of maintenance allowance, the "Amount per child" data is calculated with the following expression:</p>
				<p><code>max(0, round((Debtor's income - Lump amount of the French RSA) * Alimony rate / 100))</code></p>
				<p>In this expression « Debtor's income », « Lump amount of the French RSA » and « Alimony rate » are fields (data), « max » and « round » are functions, « 0 » and « 100 » are literal values, « - », « * » and « / » are operators.</p>
			</div>
		</div>
	</div>
</div>
