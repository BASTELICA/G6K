{# DO NOT EDIT THIS FILE #}	
{% macro row(context) %}

{% set step = context.step %}
{% set simu = step.simulator %}
{% set count = 0 %}
{%- for fieldset in step.fieldSets -%}
	{%- if fieldset.displayable or (step.dynamic and context.script == 1) or (simu.dynamic and step.id == 0) -%}
		{% set count = count + 1 %}
	{% endif %}
{% endfor %}

{%- for fieldset in step.fieldSets -%}
	{%- if fieldset.displayable or (step.dynamic and context.script == 1) or (simu.dynamic and step.id == 0) -%}
	<{%- if count > 1 -%}fieldset{% else %}div class="fieldset"{% endif %} id="{{ step.name }}-fieldset-{{ fieldset.id }}">
	{%- if count > 1 %}
		<legend>{%- if fieldset.legend is not empty -%}{{ fieldset.legend }}{%- else -%}{{ step.label }}{%- endif -%}</legend>
	{% else %}
		{%- if fieldset.legend is not empty -%}<div class="legend">{{ fieldset.legend }}</div>{%- endif -%}
	{% endif %}
	{%- if fieldset.disposition is not empty and fieldset.disposition == "grid" -%}
	<table class="grid" id="{{ step.name }}-grid-{{ fieldset.id }}">
	<thead>
	<tr>
	<th>&nbsp;</th>
	{%- for column in fieldset.column -%}
	<th>{{ column.label }}</th>
	{% endfor %}
	</tr>
	</thead>
	<tbody>
	{%- for row in fieldset.fieldRows -%}
	<tr>
	<th>{{ row.label }}</th>
	{%- for field in row.fields -%}
		{%- if field.displayable or (step.dynamic and context.script == 1) or (simu.dynamic and step.id == 0) -%}
			{% set id = field.data %}
			{% set data = simu.dataById(id) %}
			{% set type = data.type %}
			{% set name = data.name %}
			{% set value = data.value %}
			{% set prompt = field.prompt ? field.prompt : '---------' %}
			{%- if type == 'money' or type == 'percent' -%}
				{% set value = value|replace(".", ",") %}
			{% elseif type == 'number' %}
			{% elseif type == 'integer' %}
				{% set type = 'number' %}
			{% endif %}
			{%- if field.usage == 'input' -%}
			<td>
				{%- if type == 'money' and simu.symbolPosition == 'before' %}<span class="money-symbol">{{ simu.moneySymbol }}</span> {% endif %}
				{%- if type == 'choice' -%}
					{%- if field.expanded == 1 -%}
					<div id="{{ name }}">
					{%- for choice in data.choices -%}
						{%- if choice.selected -%}
						<label class="choice" for="{{ name }}_{{ choice.id }}"><input id="{{ name }}_{{ choice.id }}" type="radio" name="{{ name }}" value="{{ choice.value }}"{%- if choice.value == value %} checked="checked"{% endif %} />{{ choice.label }}</label>
						{% endif %}
					{% endfor %}
					</div>
					{% else %}
						<select id="{{ name }}" name="{{ name }}">
						{%- if not(data.default) -%}<option id="{{ name }}_none" value="">{{ prompt }}</option>{% endif %}
						{%- for choice in data.choices -%}
							{%- if choice.selected -%}
							<option id="{{ name }}_{{ choice.id }}" value="{{ choice.value }}"{%- if choice.value == value %} selected="selected"{% endif %}>{{ choice.label }}</option>
							{% endif %}
						{% endfor %}
						</select>
					{% endif %}
				{% elseif type == 'boolean' %}
				<input type="checkbox" id="{{ name }}" name="{{ name }}" value="true"{%- if value == 'true' %} checked="checked"{% endif %} />
				{% elseif type == 'date' %}
					{%- if context.ua.mobile -%}
					<input type="date" id="{{ name }}" name="{{ name }}" value="{{ value }}" class="date{%- if data.error %} error{% endif %}"{%- if data.min is not empty %} min="{{ data.min }}"{% endif %}{%- if data.max is not empty %} max="{{ data.max }}"{% endif %} />
					{% elseif context.script == 0 %}
					<input type="date" id="{{ name }}" name="{{ name }}" value="{{ value }}" class="date{%- if data.error %} error{% endif %}" placeholder="jj/mm/aaaa" />
					{% else %}
					<input type="text" id="{{ name }}" name="{{ name }}" value="{{ value }}" class="date{%- if data.error %} error{% endif %}" placeholder="jj/mm/aaaa" />
					{% endif %}
				{% elseif type == 'day' %}
					{% set min = data.min ?: 01 %}
					{% set max = data.max ?: 31 %}
					<select id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>
					{%- if not(data.default) -%}<option value="00">--</option>{% endif %}
					{% for i in min..max %}
					<option value="{{ i }}"{%- if i == value %} selected="selected"{% endif %}>{{ i }}</option>
					{% endfor %}
					</select>
				{% elseif type == 'month' %}
					{% set min = data.min|default(01) %}
					{% set max = data.max|default(12) %}
					<select id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>
					{%- if not(data.default) -%}<option value="00">{{ prompt }}</option>{% endif %}
					{% for i in min..max %}
					<option value="{{ i }}"{%- if value == i %} selected="selected"{% endif %}>{{ _self.monthname(i) }}</option>
					{% endfor %}
					</select>
				{% elseif type == 'year' %}
					{% set min = data.min|default(1964) %}
					{% set max = data.max|default(min + 100) %}
					<select id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>
					{%- if not(data.default) -%}<option value="">----</option>{% endif %}
					{% for i in min..max %}
					<option value="{{ i }}"{%- if i == value %} selected="selected"{% endif %}>{{ i }}</option>
					{% endfor %}
					</select>
				{% elseif type == 'region' %}
					<select id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>
					{{ _self.regions() }}
					</select>
				{% elseif type == 'department' %}
					<select id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>
					{{ _self.departments(value) }}
					</select>
				{% elseif type == 'textarea' %}
				<textarea id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>{{ value }}</textarea>
				{% elseif type == 'number' %}
				<input type="{{ type }}" id="{{ name }}" name="{{ name }}" value="{{ value }}"{%- if data.min is not empty %} min="{{ data.min }}"{% endif %}{%- if data.max is not empty %} max="{{ data.max }}"{% endif %}{%- if data.error -%} class="error"{% endif %} />
				{% else %}
				<input type="{{ type }}" id="{{ name }}" name="{{ name }}" value="{{ value }}"{%- if data.error -%} class="error"{% endif %} />
				{% endif %}
				{%- if type == 'money' and simu.symbolPosition == 'after' %}
					<span class="money-symbol">{{ simu.moneySymbol }}</span>
				{% endif %}
				{%- if type == 'percent' -%}<span class="percent-symbol">%</span>{%- endif %}
				{%- if data.unit -%}<span class="unit"> {{ data.unit }}</span>{%- endif -%}
			</td>
			{% else %}
			<td>{{ value }}</td>
			{% endif %}
		{% else %}
		<td>&nbsp;</td>
		{% endif %}
	{% endfor %}
	</tr>
	{% endfor %}
	</tbody>
	</table>
	{% else %}
	{%- for field in fieldset.fields -%}
		{%- if field.displayable or (step.dynamic and context.script == 1) or (simu.dynamic and step.id == 0) -%}
			{% set id = field.data %}
			{% set label = field.label %}
			{% set data = simu.dataById(id) %}
			{% set type = data.type %}
			{% set name = data.name %}
			{% set value = data.value %}
			{% set prompt = field.prompt ? field.prompt : '---------' %}
			{%- if type == 'money' or type == 'percent' -%}
				{% set value = value|replace(".", ",") %}
			{% elseif type == 'number' %}
			{% elseif type == 'integer' %}
				{% set type = 'number' %}
			{% endif %}
			<div id="{{ name }}-container" class="field-container">
			{%- if not(loop.first) and field.newline -%}<br />{% endif %}
			{%- if field.preNote -%}
				<div class="pre-note">{{ _self.paragraphs(field.preNote) }}</div>
			{% endif %}
			{%- if field.usage == 'input' -%}
				{%- if label == '' -%}
				<span class="label">{% if field.required %} * {% endif %}</span>
				{% else %}
				<label for="{{ name }}">{{ label }}{% if field.required %} * {% endif %}{% if field.hasColon %} : {% endif %}</label>
				{% endif %}
				{% if field.underlabel == 1 %}<br />{% endif %}
				{%- if type == 'money' and simu.symbolPosition == 'before' %}<span class="money-symbol">{{ simu.moneySymbol }}</span> {% endif %}
				{%- if type == 'choice' -%}
					{%- if field.expanded == 1 -%}
					<div id="{{ name }}">
					{%- for choice in data.choices -%}
						{%- if choice.selected -%}
						<label class="choice" for="{{ name }}_{{ choice.id }}"><input id="{{ name }}_{{ choice.id }}" type="radio" name="{{ name }}" value="{{ choice.value }}"{%- if choice.value == value %} checked="checked"{% endif %} />{{ choice.label }}</label>
						{% endif %}
					{% endfor %}
					</div>
					{% else %}
						<select id="{{ name }}" name="{{ name }}">
						{%- if not(data.default) -%}<option id="{{ name }}_none" value="">{{ prompt }}</option>{% endif %}
						{%- for choice in data.choices -%}
							{%- if choice.selected -%}
							<option id="{{ name }}_{{ choice.id }}" value="{{ choice.value }}"{%- if choice.value == value %} selected="selected"{% endif %}>{{ choice.label }}</option>
							{% endif %}
						{% endfor %}
						</select>
					{% endif %}
				{% elseif type == 'boolean' %}
				<input type="checkbox" id="{{ name }}" name="{{ name }}" value="true"{%- if value == 'true' %} checked="checked"{% endif %} />
				{% elseif type == 'date' %}
					{%- if context.ua.mobile -%}
					<input type="date" id="{{ name }}" name="{{ name }}" value="{{ value }}" class="date{%- if data.error %} error{% endif %}"{%- if data.min is not empty %} min="{{ data.min }}"{% endif %}{%- if data.max is not empty %} max="{{ data.max }}"{% endif %} />
					{% elseif context.script == 0 %}
					{#
					<div class="g6k-date">
					<legend>{{ name }}</legend>
					{% set values = value|split('/', 3) %}
					{% set day = values[0]|default('') %}
					{% set month = values[1]|default('') %}
					{% set year = values[2]|default('') %}
					<label for="{{ name }}_g6k_day">{{ 'Day'|trans }}</label>
					<select id="{{ name }}_g6k_day" name="{{ name }}_g6k_day"{%- if data.error %} class="error"{% endif %}>
					<option value="">--</option>
					{% for i in 01..31 %}
					<option value="{{ i }}"{%- if i == day %} selected="selected"{% endif %}>{{ "%02d"|format(i) }}</option>
					{% endfor %}
					</select>
					<label for="{{ name }}_g6k_month">{{ 'Month'|trans }}</label>
					<select id="{{ name }}_g6k_month" name="{{ name }}_g6k_month"{%- if data.error %} class="error"{% endif %}>
					<option value="">--</option>
					{% for i in 01..12 %}
					<option value="{{ i }}"{%- if i == month %} selected="selected"{% endif %}>{{ "%02d"|format(i) }}</option>
					{% endfor %}
					</select>
					<label for="{{ name }}_g6k_year">{{ 'Year'|trans }}</label>
					<select id="{{ name }}_g6k_year" name="{{ name }}_g6k_year"{%- if data.error %} class="error"{% endif %}>
					<option value="">----</option>
					{% for i in 1964..2064 %}
					<option value="{{ i }}"{%- if i == year %} selected="selected"{% endif %}>{{ i }}</option>
					{% endfor %}
					</select>
					</div>
					#}
					<input type="date" id="{{ name }}" name="{{ name }}" value="{{ value }}" class="date{%- if data.error %} error{% endif %}" placeholder="jj/mm/aaaa" />
					{% else %}
					<input type="text" id="{{ name }}" name="{{ name }}" value="{{ value }}" class="date{%- if data.error %} error{% endif %}" placeholder="jj/mm/aaaa" />
					{% endif %}
				{% elseif type == 'day' %}
					{% set min = data.min ?: 01 %}
					{% set max = data.max ?: 31 %}
					<select id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>
					{%- if not(data.default) -%}<option value="00">--</option>{% endif %}
					{% for i in min..max %}
					<option value="{{ i }}"{%- if i == value %} selected="selected"{% endif %}>{{ i }}</option>
					{% endfor %}
					</select>
				{% elseif type == 'month' %}
					{% set min = data.min|default(01) %}
					{% set max = data.max|default(12) %}
					<select id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>
					{%- if not(data.default) -%}<option value="00">{{ prompt }}</option>{% endif %}
					{% for i in min..max %}
					<option value="{{ i }}"{%- if value == i %} selected="selected"{% endif %}>{{ _self.monthname(i) }}</option>
					{% endfor %}
					</select>
				{% elseif type == 'year' %}
					{% set min = data.min|default(1964) %}
					{% set max = data.max|default(min + 100) %}
					<select id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>
					{%- if not(data.default) -%}<option value="">----</option>{% endif %}
					{% for i in min..max %}
					<option value="{{ i }}"{%- if i == value %} selected="selected"{% endif %}>{{ i }}</option>
					{% endfor %}
					</select>
				{% elseif type == 'region' %}
					<select id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>
					{{ _self.regions() }}
					</select>
				{% elseif type == 'department' %}
					<select id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>
					{{ _self.departments(value) }}
					</select>
				{% elseif type == 'textarea' %}
				<textarea id="{{ name }}" name="{{ name }}"{%- if data.error %} class="error"{% endif %}>{{ value }}</textarea>
				{% elseif type == 'number' %}
				<input type="{{ type }}" id="{{ name }}" name="{{ name }}" value="{{ value }}"{%- if data.min is not empty %} min="{{ data.min }}"{% endif %}{%- if data.max is not empty %} max="{{ data.max }}"{% endif %}{%- if data.error -%} class="error"{% endif %} />
				{% else %}
				<input type="{{ type }}" id="{{ name }}" name="{{ name }}" value="{{ value }}"{%- if data.error -%} class="error"{% endif %} />
				{% endif %}
				{%- if type == 'money' and simu.symbolPosition == 'after' %}
					<span class="money-symbol">{{ simu.moneySymbol }}</span>
				{% endif %}
				{%- if type == 'percent' -%}<span class="percent-symbol">%</span>{%- endif %}
				{%- if data.unit -%}<span class="unit"> {{ data.unit }}</span>{%- endif -%}
			{% elseif field.usage == 'output' %}
				{%- if label is not empty -%}
					{%- if field.emphasized -%}
					<span id="{{ name }}-label" class="label emphasized">{{ label }}{% if field.hasColon %} : {% endif %}</span>
					{% else %}
					<span id="{{ name }}-label" class="label">{{ label }}{% if field.hasColon %} : {% endif %}</span>
					{%- endif -%}
				{%- endif -%}
				{%- if type == 'table' -%}
				<table id="{{ data.table.id }}" summary="{{ data.table.description }}">
					<caption>{{ data.table.label }}</caption>
					<thead>
						<tr>
						{%- for column in data.table.columns -%}
							<th id="{{ column.id }}" abbr="{{ column.name }}" scope="col">{{ column.label }}</th>
						{% endfor %}
						<tr>
					</thead>
					<tbody>
						{%- for row in data.table.rows -%}
						<tr>
							{%- for cell in row.cells -%}
							<td headers="{{ cell.column.id }}">{{ cell }}</td>
							{% endfor %}
						</tr>
						{% endfor %}
					</tbody>
				</table>
				{%- else -%}
					{% spaceless %}
					<span id="{{ name }}" class="output{%- if field.emphasized %} emphasized{%- endif -%}">{%- if type == 'money' and simu.symbolPosition == 'before' %}{{ simu.moneySymbol }} {% endif -%}
					{%- if type == 'choice' -%}
						{%- for choice in data.choices if choice.value == value -%}
							{{- choice.label|trim -}}
						{%- endfor -%}
					{%- elseif type == 'boolean' -%}
						{{ value == 'true' ? 'oui' : 'non' }}
					{%- elseif type == 'month' -%}
						{{ _self.monthname(value) }}
					{%- elseif type == 'department' -%}
						{{ _self.departmentname(value) }}
					{%- else -%}
						{{ value }}
					{%- endif -%}			
					</span>
					{%- if type == 'money' and simu.symbolPosition == 'after' %}
						<span class="money-symbol{%- if field.emphasized %} emphasized{%- endif %}">&#xA0;{{ simu.moneySymbol }}</span>
					{%- endif -%}
					{%- if type == 'percent' -%}<span class="percent-symbol{%- if field.emphasized %} emphasized{%- endif -%}">%</span>{%- endif -%}
					{%- if data.unit -%}<span class="unit{%- if field.emphasized %} emphasized{%- endif -%}"> {{ data.unit }}</span>{%- endif -%}
					{% endspaceless %}
				{%- endif %}
			{% endif %}
			{%- if field.hasHelp -%}
				<button type="button" data-toggle="collapse" data-target="#help-{{ name }}" class="btn-help btn-swap" title="aide sur {{ label }}"><img src="{{ asset('bundles/eurekag6k/' ~ context.view ~ '/images/help-off.png') }}" alt="aide sur {{ label }}" /></button>
			{% endif %}
			{%- if (step.dynamic or (simu.dynamic and step.id == 0)) and field.usage == 'input' -%}
			<div class="error">{%- if data.error -%}{{ data.errorMessage }}{% endif %}</div>
			{%- else -%}
			{%- if data.error -%}<div class="error">{{ data.errorMessage }}</div>{% endif %}
			{% endif %}
			{%- if field.explanation is not empty -%}
				<span id="{{ name }}-explanation" class="explanation">{{ field.explanation }}</span>
			{% endif %}
			{%- if field.postNote -%}
				<div class="post-note">{{ _self.paragraphs(field.postNote) }}</div>
			{% endif %}
			{%- if field.hasHelp %}
				{% set paragraphs = data.description|trim|split("\n") %}
				<div class="collapse help-panel" id="help-{{ name }}">
				{%- for paragraph in paragraphs -%}
					<p>{{ paragraph|raw }}</p>
				{% endfor %}
				</div>
			{% endif %}
			</div>
		{% endif %}
	{% endfor %}
	{% endif %}
	</{%- if count > 1 -%}fieldset{% else %}div{% endif %}>
	{% endif %}
{% endfor %}
{%- if step.footNotes %}
<div class="foot-notes">
{%- for footnote in step.footNotes -%}
	{%- if footnote.displayable or (simu.dynamic and step.id == 0) -%}
	<div id="foot-note-{{ footnote.id }}" class="foot-note">
	{{ footnote.text|raw }}
	</div>
	{% endif %}
{% endfor %}
</div>
{% endif %}

{{ _self.hiddens(context) }}

{% endmacro %}


{% macro breadcrumb(context) %}

{% set step = context.step %}
{% if step.id > 0 %}
{% set simu = step.simulator %}
{% set count = 0 %}
{%- for s in simu.steps -%}
	{% if s.id > 0 and s.displayable and (s.output is empty or s.output == 'normal') %}
		{% set count = count + 1 %}
	{% endif %}
{% endfor %}

{% set stepnum = 0 %}

<div class="breadcrumb">
<ol class="breadcrumb-{{ count }} breadcrumb-{{ count }}-{{ step.id }}">
{%- for s in simu.steps -%}
	{% if s.id > 0 and s.displayable and (s.output is empty or s.output == 'normal') %} 
		{% set stepnum = stepnum + 1 %}
		{% if s.id == step.id %}
		<li class="current" title="{{ 'Current step'|trans }}"><p><span>{{ stepnum }}</span> <span>{{ s.label }}</span></p></li>
		{% else %}
		<li><p><span>{{ stepnum }}</span> <span>{{ s.label }}</span></p></li>
		{% endif %}
	{% endif %}
{% endfor %}
</ol>
</div>
{% endif %}

{% endmacro %}

{% macro actions(context) %}

{% set step = context.step %}
{% set simu = step.simulator %}
<div class="action_buttons">

{%- for action in step.actions -%}
	 <input type="{{ action.what }}" name="{{ action.name }}" value="{{ action.label }}" />
{% endfor %}

</div>
{% endmacro %}

{% macro hiddens(context) %}
{% set step = context.step %}
{% set extras = context.hiddens %}
{% set simu = step.simulator %}
{%- for data in simu.datas -%}
	{%- if not data.used -%}
		<input type="hidden" name="{{ data.name }}" value="{{ data.value }}"{%- if data.inputStepId == 0 or data.inputStepId > step.id %} class="resettable"{%- endif -%} />
	{% endif %}
{% endfor %}
{%- for name, value in extras -%}
	<input type="hidden" name="{{ name }}" value="{{ value }}" />
{% endfor %}
<input type="hidden" name="_csrf_token" value="{{ csrf_token('authenticate') }}" />
{% endmacro %}

{% macro monthname(m) %}
{% set months = ["{{ 'January'|trans }}", "{{ 'February'|trans }", "{{ 'March'|trans }", "{{ 'April'|trans }", "{{ 'May'|trans }", "{{ 'June'|trans }", "{{ 'July'|trans }", "{{ 'August'|trans }", "{{ 'September'|trans }", "{{ 'October'|trans }", "{{ 'November'|trans }", "{{ 'December'|trans }"] %}
{% if m > 0 %}{{ months[m - 1] }}{% endif %}
{% endmacro %}

{% macro paragraphs(text) %}
	{% set paragraphs = text|trim|split("\n") %}
	{%- for paragraph in paragraphs -%}
	<p>{%- if paragraph|trim is empty -%}&nbsp;{%- else -%}{{ paragraph }}{%- endif -%}</p>
	{% endfor %}
{% endmacro %}

{% macro departments(value) %}
{% set deps = {'01': 'Ain', '02': 'Aisne', '03': 'Allier', '04': 'Alpes-de-Haute-Provence', '05': 'Hautes-Alpes', '06': 'Alpes-Maritimes', '07': 'Ardèche', '08': 'Ardennes', '09': 'Ariège', '10': 'Aube', '11': 'Aude', '12': 'Aveyron', '13': 'Bouches-du-Rhône', '14': 'Calvados', '15': 'Cantal', '16': 'Charente', '17': 'Charente-Maritime', '18': 'Cher', '19': 'Corrèze', '21': 'Côte-d\'Or', '22': 'Côtes-d\'Armor', '23': 'Creuse', '24': 'Dordogne', '25': 'Doubs', '26': 'Drôme', '27': 'Eure', '28': 'Eure-et-Loir', '29': 'Finistère', '2A': 'Corse-du-Sud', '2B': 'Haute-Corse', '30': 'Gard', '31': 'Haute-Garonne', '32': 'Gers', '33': 'Gironde', '34': 'Hérault', '35': 'Ille-et-Vilaine', '36': 'Indre', '37': 'Indre-et-Loire', '38': 'Isère', '39': 'Jura', '40': 'Landes', '41': 'Loir-et-Cher', '42': 'Loire', '43': 'Haute-Loire', '44': 'Loire-Atlantique', '45': 'Loiret', '46': 'Lot', '47': 'Lot-et-Garonne', '48': 'Lozère', '49': 'Maine-et-Loire', '50': 'Manche', '51': 'Marne', '52': 'Haute-Marne', '53': 'Mayenne', '54': 'Meurthe-et-Moselle', '55': 'Meuse', '56': 'Morbihan', '57': 'Moselle', '58': 'Nièvre', '59': 'Nord', '60': 'Oise', '61': 'Orne', '62': 'Pas-de-Calais', '63': 'Puy-de-Dôme', '64': 'Pyrénées-Atlantiques', '65': 'Hautes-Pyrénées', '66': 'Pyrénées-Orientales', '67': 'Bas-Rhin', '68': 'Haut-Rhin', '69': 'Rhône', '70': 'Haute-Saône', '71': 'Saône-et-Loire', '72': 'Sarthe', '73': 'Savoie', '74': 'Haute-Savoie', '75': 'Paris', '76': 'Seine-Maritime', '77': 'Seine-et-Marne', '78': 'Yvelines', '79': 'Deux-Sèvres', '80': 'Somme', '81': 'Tarn', '82': 'Tarn-et-Garonne', '83': 'Var', '84': 'Vaucluse', '85': 'Vendée', '86': 'Vienne', '87': 'Haute-Vienne', '88': 'Vosges', '89': 'Yonne', '90': 'Territoire de Belfort', '91': 'Essonne', '92': 'Hauts-de-Seine', '93': 'Seine-Saint-Denis', '94': 'Val-de-Marne', '95': 'Val-d\'Oise', '971': 'Guadeloupe', '972': 'Martinique', '973': 'Guyane'} %}
<option value=""{%- if value == "" %} selected="selected"{% endif %}>---------</option>
{%- for nodep, dep in deps -%}
<option value="{{ nodep }}"{%- if nodep == value %} selected="selected"{% endif %}>{{ nodep }} - {{ dep }}</option>
{% endfor %}
{% endmacro %}

{% macro departmentname(nodep) %}
{% set deps = {'01': 'Ain', '02': 'Aisne', '03': 'Allier', '04': 'Alpes-de-Haute-Provence', '05': 'Hautes-Alpes', '06': 'Alpes-Maritimes', '07': 'Ardèche', '08': 'Ardennes', '09': 'Ariège', '10': 'Aube', '11': 'Aude', '12': 'Aveyron', '13': 'Bouches-du-Rhône', '14': 'Calvados', '15': 'Cantal', '16': 'Charente', '17': 'Charente-Maritime', '18': 'Cher', '19': 'Corrèze', '21': 'Côte-d\'Or', '22': 'Côtes-d\'Armor', '23': 'Creuse', '24': 'Dordogne', '25': 'Doubs', '26': 'Drôme', '27': 'Eure', '28': 'Eure-et-Loir', '29': 'Finistère', '2A': 'Corse-du-Sud', '2B': 'Haute-Corse', '30': 'Gard', '31': 'Haute-Garonne', '32': 'Gers', '33': 'Gironde', '34': 'Hérault', '35': 'Ille-et-Vilaine', '36': 'Indre', '37': 'Indre-et-Loire', '38': 'Isère', '39': 'Jura', '40': 'Landes', '41': 'Loir-et-Cher', '42': 'Loire', '43': 'Haute-Loire', '44': 'Loire-Atlantique', '45': 'Loiret', '46': 'Lot', '47': 'Lot-et-Garonne', '48': 'Lozère', '49': 'Maine-et-Loire', '50': 'Manche', '51': 'Marne', '52': 'Haute-Marne', '53': 'Mayenne', '54': 'Meurthe-et-Moselle', '55': 'Meuse', '56': 'Morbihan', '57': 'Moselle', '58': 'Nièvre', '59': 'Nord', '60': 'Oise', '61': 'Orne', '62': 'Pas-de-Calais', '63': 'Puy-de-Dôme', '64': 'Pyrénées-Atlantiques', '65': 'Hautes-Pyrénées', '66': 'Pyrénées-Orientales', '67': 'Bas-Rhin', '68': 'Haut-Rhin', '69': 'Rhône', '70': 'Haute-Saône', '71': 'Saône-et-Loire', '72': 'Sarthe', '73': 'Savoie', '74': 'Haute-Savoie', '75': 'Paris', '76': 'Seine-Maritime', '77': 'Seine-et-Marne', '78': 'Yvelines', '79': 'Deux-Sèvres', '80': 'Somme', '81': 'Tarn', '82': 'Tarn-et-Garonne', '83': 'Var', '84': 'Vaucluse', '85': 'Vendée', '86': 'Vienne', '87': 'Haute-Vienne', '88': 'Vosges', '89': 'Yonne', '90': 'Territoire de Belfort', '91': 'Essonne', '92': 'Hauts-de-Seine', '93': 'Seine-Saint-Denis', '94': 'Val-de-Marne', '95': 'Val-d\'Oise', '971': 'Guadeloupe', '972': 'Martinique', '973': 'Guyane'} %}
{{ deps[nodep] }}
{% endmacro %}

{% macro asset(c, resource) %}{% set pathlength = c.pathlength %}{% set updir = 'src/EUREKA/G6KBundle/Resources/public/' ~ resource %}{%- if pathlength > 0 %}{% for i in 1..pathlength %}{% set updir = '../' ~ updir %}{% endfor %}{% endif %}{{ updir }}{% endmacro %}
